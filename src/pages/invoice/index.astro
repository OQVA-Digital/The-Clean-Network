<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice Â· OQVA</title>
    <style>
        html, body, p, h1, h2, h3, h4, h5, h6 {
            margin:0;
            cursor:default;
        }
        body, input, textarea, button {
            font-family: 'Tahoma', sans-serif;
        }
        body {
            display: flex;
            flex-direction: column;
            /* gap: 2rem; */
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 18px;
            margin: 0;
            background-color: #222;
        } main {
            /* min-height: 100vh; */
            box-sizing: border-box;
            /* width: 100%; */
            display: block;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background-color: white;
            padding: clamp(2rem, 17vw, 5rem) clamp(0.6vw, 6vw, 2.5rem) 2rem;
            z-index: 1;
            position: relative;
            margin: clamp(1.6rem, 7vw, 3rem) 0 0;
            justify-content: center;
            gap: 2rem;
            border-radius: 0.2rem;
            box-shadow: 0 1rem 3rem -1rem black;
            overflow: hidden;
        } main article {
            display: flex;
            flex-direction: column;
            gap: 0.8rem;
            justify-content: center;
            align-items: stretch;
            width: clamp(10rem, 66vh, 87vw);
            width: clamp(10rem, 80vw, 40rem);
            font-size: 0.9rem;
        }

        .flex {
            display: flex;
        }
        .rows {
            flex-direction: row;
        } .rows input {flex: 1;} .columns {
            flex-direction: column;
        } .rows.wrap {
            flex-direction: unset;
            flex-flow: row wrap;
        } .gap {
            gap: 0.8rem;
        } label.rows {
            align-items: center;
            gap: 0.6rem;
            flex-flow: row wrap;
        } label.columns {
            gap: 0.5rem;
        }

        .logo {
            margin-bottom: 1rem;
            width: clamp(5rem, 33vw, 11rem);
        }

        header.rows {
            justify-content: space-between;
            align-items: end;
            margin-bottom: 1vw;
            gap: 0.3rem;
        } header.rows p {
            line-height: 1;
            font-size: clamp(0.8rem, 3vw, 0.9rem);
            text-transform: uppercase;
            letter-spacing: 0.1rem;
            /* width: 100%; */
            max-width: 11rem;
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        } header .flex {
            max-width: 45%;
        } .stored_data {
            /* max-width: 100%; */
            padding: 6rem 0;
            box-sizing: border-box;
            position: sticky;
            bottom: 0;
            max-width: clamp(10rem, 80vw, 40rem);
            font-size: 1.1rem;
            line-height: 1.6;
            letter-spacing: 0.05rem;
        } .stored_data .ctnr {
            display: flex;
            flex-direction: column;
            margin-top: 1rem;
            max-width: 40rem;
            word-wrap: break-word;
            color: #AAA;
        } .stored_data .ctnr span {
        }  .stored_data .ctnr b {
        } .stored_data h2, .stored_data .ctnr span b {
            /* text-align: center; */
            display: inline-block;
            color: #eee;
            padding: 0 0.2rem;
            font-weight: 400;
        } .header_info {
            display: flex;
            flex-direction: column;
            gap: 0.4rem;
            text-transform: uppercase;
            letter-spacing: 0.1rem;
            font-size: clamp(0.6rem, 3vw, 0.8rem);
        }

        .bt_ctnr {
            display: flex;
            flex-flow: row wrap;
            gap: 1rem;
            justify-content: center;
            flex: 1;
        } button {
            flex: 1;
            padding: 0.8rem 0.6rem;
            border: 0.2rem solid #444;
            background-color: #222;
            color: #fff;
            font-size: 0.9rem;
            border-radius: 0.2rem;
            cursor: pointer;
            text-transform: uppercase;
            white-space: nowrap;
            letter-spacing: 0.1rem;
        }

        input, textarea {
            padding: 0.4rem;
            box-sizing: border-box;
            border: 0.1rem solid #CCC;
            transition: background-color 0.5s ease;
            border-bottom: 0.2rem solid #DDD;
        } input:hover, textarea:hover {
            background-color:#F8F7F8;
            transition: background-color 0.03s ease;
        } input:focus-visible, textarea:focus-visible {
            outline: unset;
            border-color: #777;
        }
            textarea {
            max-width: 100%;
            min-width: 100%;
            min-height: 4rem;
        }

        .payment_info {
            letter-spacing: 0.05rem;
            /* text-transform: uppercase; */
            text-align: center;
            margin: 1vw auto;
            width: 100%;
            line-height: 1.6;
            /* overflow-x: auto; */
        } .payment_info span {
            padding: 0.9rem 2rem;
            display: inline-block;
            border: 0.12rem dashed #CCC;
            line-height: 1.5;
            width: 100%;
            box-sizing: border-box;
            letter-spacing: 0.15rem;
            letter-spacing: 0.06rem;
            box-sizing: border-box;
            width: max-content;
            max-width: 100%;
        }

        .graphic {
            position: absolute;
            object-fit: cover;
            z-index: -1;
            /* opacity: 0.1; */
        } .graphic img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: top;
        } .g1 {
            height: 2.8rem;
            width: 12rem;
            left: 0;
            top: 0;
            object-position: bottom;
        } .g2 {
        display: none;
        } .g3 {
            height: 13rem;
            width: 3rem;
            right: 0;
            top: 25vh;
            object-position: right;
            display: none;
        }

        @media print {
            body {
                margin:0;
            }
            main {
                min-height: 100vh;
                width:100%;
                margin:unset;
                padding:unset;
                border-radius: unset;
                box-shadow:unset;
            } main article {
                margin:9vh auto 0;
            } .outline {
                margin:2rem 0;
            }
            .stored_data, button {
                display: none;
            }

            .graphic {
                opacity: 1;
            }
            
        }

        /* @page{
            margin: -50rem;
        } */

        @media (min-width:500px) {
            header .flex {
            }
        }
    </style>
</head>

<body>
    <main>
        <article>
            <header class="flex rows">
                <div class="header_info">
                    <?xml version="1.0" encoding="UTF-8"?><svg class="logo" id="Camada_1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 298.01 93"><path d="m149.25,0c1.97,1.48,1.83,3.58,1.83,5.73-.03,19.78-.01,39.56,0,59.34,0,1.12.11,2.25.01,3.37-.19,2.3-1.23,3.24-3.55,3.27-3.16.04-6.33.02-9.5.02-3.08,0-6.16-.03-9.25.02-3.16.05-4.07.98-4.08,4.15-.02,3.91,0,7.83-.02,11.74,0,.87-.06,1.75-.24,2.6-.27,1.28-1.21,2-2.51,2.01-4.08.02-8.15.03-12.23,0-1.98-.01-2.86-.72-3.03-2.71-.18-2.15-.12-4.32-.14-6.49-.03-2.62,0-5.25-.04-7.87-.03-2.33-1.13-3.44-3.47-3.44-6.16-.02-12.33-.01-18.49-.02-.5,0-1,0-1.5,0-3.07-.02-4.03-.98-4.03-4.05,0-21.07.01-42.15-.03-63.22,0-1.96.43-3.52,2.26-4.46h68Zm-16.39,35.87s-.03,0-.05,0c0-4.7.04-9.41-.02-14.11-.03-2.62-1.03-3.67-3.66-3.69-9.41-.06-18.82-.06-28.23,0-2.91.02-3.75.97-3.88,3.86-.02.42-.02.83-.02,1.25,0,8.08-.02,16.16,0,24.23,0,1.2.11,2.41.18,3.61.09,1.42.98,2.17,2.25,2.48.68.17,1.4.21,2.1.22,8.66,0,17.32,0,25.98-.01.87,0,1.75-.05,2.62-.15,1.51-.18,2.49-1.18,2.64-2.7.08-.78.08-1.58.09-2.37,0-4.21,0-8.41,0-12.62Z"/><path d="m296.25,0c.15.19.26.44.45.55,1.02.59,1.31,1.48,1.31,2.63-.04,11.96-.05,23.91-.05,35.87,0,9.62.03,19.25.04,28.87,0,.33,0,.67-.01,1-.06,1.89-.83,2.77-2.75,2.81-4.12.08-8.25.1-12.37.07-1.87-.01-2.8-1.06-2.84-2.92-.03-1.79.02-3.59-.07-5.37-.14-2.57-1.22-3.55-3.81-3.55-9.37,0-18.75,0-28.12.01-2.56,0-3.73,1.16-3.77,3.73-.03,1.71.03,3.42-.01,5.12-.05,1.8-1.1,2.88-2.91,2.9-4.08.04-8.17.04-12.25-.01-1.87-.02-2.9-1.1-3.04-2.96-.03-.41-.01-.83-.01-1.25,0-20.83-.01-41.66-.02-62.49,0-.08,0-.17,0-.25,0-1.86.09-3.68,1.98-4.75,22.75,0,45.5,0,68.25,0Zm-34.01,41.77h0c4.79,0,9.58.01,14.37-.02,2.06-.01,3.14-1.04,3.36-3.09.06-.54.04-1.08.04-1.62-.03-5.25,0-10.49-.14-15.74-.06-2.36-1.17-3.31-3.47-3.32-9.5-.01-18.99-.01-28.49,0-2.41,0-3.47,1.06-3.6,3.5-.02.37-.03.75-.03,1.12,0,5.08,0,10.16.02,15.24,0,2.81,1,3.87,3.82,3.9,4.71.05,9.41.01,14.12.01Z"/><path d="m219.5,0c2.24,1.26,1.96,3.24,1.61,5.33-1.99,11.85-3.91,23.71-5.89,35.56-1.65,9.88-3.34,19.76-4.97,29.65-.19,1.15-.92.99-1.63,1-5.45.06-10.91.11-16.36.15-6.58.05-13.16.07-19.74.11-.5,0-1,0-1.5-.02-1.94-.1-2.87-.75-3.23-2.66-.66-3.47-1.18-6.96-1.76-10.45-1.72-10.29-3.44-20.58-5.15-30.88-1.31-7.87-2.53-15.76-3.93-23.62-.37-2.06.4-3.26,2.05-4.17h13.75c1.03,1,1.77,2.1,2.03,3.6.81,4.76,1.74,9.49,2.6,14.24,1.3,7.16,2.58,14.33,3.89,21.49.71,3.89,1.41,7.78,2.23,11.64.44,2.09,1.38,2.74,3.54,2.79,1.37.03,2.75.03,4.12,0,2.28-.05,3.16-.73,3.6-2.99.91-4.69,1.75-9.4,2.61-14.1,1.9-10.35,3.8-20.7,5.72-31.05.39-2.09.38-4.4,2.66-5.61h13.75Z"/><path d="m257.03,88.83c-.04.72-.07,1.38-.11,2.09h-1.83v-11.47h11.14c0,3.65,0,7.18,0,10.72,0,.67-.38.96-.95.78-.37-.12-.78-.45-.95-.8-.16-.33-.03-.81-.03-1.33h-7.28Zm0-2.1c2.2,0,4.23.03,6.27-.03.34,0,.94-.37.95-.59.08-1.6.04-3.2.04-4.85h-7.26v5.47Z"/><path d="m185.24,90.96c0-3.71,0-7.21,0-10.7,0-.69.28-.99.96-.98,2.99.03,5.99.02,8.98.12.37.01,1,.5,1.04.83.1.79-.48.97-1.23.95-2.29-.05-4.57-.01-6.86-.04-.7,0-.93.24-.92.96.04,2,.03,3.99,0,5.99-.01.72.16,1.07.97,1.04,1.79-.07,3.58-.1,5.36-.08.77.01,1.04-.25,1-1.01-.05-.78-.01-1.57-.01-2.58-.8,0-1.5.08-2.17-.03-.32-.05-.85-.52-.81-.71.08-.42.42-1.08.73-1.12,1.02-.14,2.08-.11,3.11-.01.3.03.78.53.79.83.07,1.91.06,3.83,0,5.74,0,.28-.43.77-.67.77-3.36.05-6.72.03-10.28.03Z"/><path d="m144.76,79.3c.96,0,1.92.03,2.87,0,1.62-.07,2.72.91,3.8,1.88.23.21.3.68.3,1.04.02,2,.05,4-.05,5.99-.02.48-.42,1.04-.81,1.38-1.28,1.1-2.77,1.55-4.5,1.42-1.57-.12-3.16-.05-4.74-.02-.79.02-1.12-.22-1.11-1.06.03-3.16.03-6.33,0-9.49,0-.82.18-1.23,1.12-1.15,1.03.09,2.08.02,3.12.02Zm-2.33,5.74s.01,0,.02,0c0,1.04.02,2.08,0,3.12-.02.61.16.92.84.9,1.41-.04,2.83.01,4.24-.05,1.71-.08,2.19-.63,2.21-2.3,0-1,.02-2,.03-2.99.01-1.7-.57-2.38-2.24-2.47-1.41-.08-2.83-.03-4.24-.07-.74-.02-.91.31-.86,1,.06.95.02,1.91.02,2.87Z"/><path d="m234.49,79.35c1.33,0,2.66-.05,3.99.04.36.02.69.49,1.04.75-.37.36-.75.72-1.12,1.08-.02.02-.08,0-.12,0-.92.08-2.16-.17-2.68.33-.46.45-.14,1.72-.15,2.62-.01,1.87-.01,3.74,0,5.61,0,.61,0,1.18-.87,1.18-.89,0-1.01-.51-1.01-1.22,0-2.45-.04-4.91.01-7.36.02-.89-.28-1.22-1.14-1.14-.54.05-1.08-.02-1.62,0-.78.03-1.3-.19-1.27-1.1.02-.87.62-.84,1.22-.84,1.25,0,2.49,0,3.74,0,0,.02,0,.03,0,.05Z"/><path d="m281.76,79.41c1.94-.31,1.98-.28,1.98,1.51,0,2.65,0,5.3,0,8.01,1.43.08,2.75.11,4.06.27.4.05.75.48,1.13.73-.36.32-.71.9-1.09.93-1.82.12-3.66.11-5.48.08-.2,0-.57-.4-.57-.62-.04-3.61-.03-7.23-.03-10.91Z"/><path d="m169.46,85.08c0,1.62,0,3.23,0,4.85,0,.62-.13,1.03-.89,1.04-.75,0-1.04-.31-1.04-1.04,0-3.28,0-6.55-.02-9.83,0-.79.45-.84,1.05-.84.61,0,.93.17.92.84-.02,1.66,0,3.32,0,4.98,0,0-.02,0-.02,0Z"/><path d="m214.21,85.14c0,1.53,0,3.07,0,4.6,0,.57.12,1.19-.8,1.23-.85.03-1.08-.38-1.08-1.12,0-3.15-.03-6.3-.05-9.45,0-.69.23-1.1,1-1.11.8,0,.96.46.95,1.13-.01,1.58,0,3.15,0,4.73,0,0-.01,0-.02,0Z"/><path d="m70.25,0H1.5C.67,0,0,.67,0,1.5h0v68.25c.98,1.62,2.5,1.99,4.28,1.99,12.16,0,24.32.05,36.49.07,9.06.01,18.12.02,27.18-.02,2.24,0,4.05-1.83,4.05-4.06,0-20.74-.01-41.49.02-62.23,0-2.05.15-4.08-1.75-5.49Zm-16.42,48.99c0,.62,0,1.25-.06,1.87-.16,1.7-1.33,2.87-3.03,2.87-9.79.03-19.57.03-29.36,0-2.04,0-3.07-.99-3.28-3-.11-.99-.11-2-.11-2.99,0-8.08,0-16.16,0-24.24,0-.62.01-1.25.06-1.87.19-2.77,1.15-3.65,3.95-3.65,9.33,0,18.66,0,27.99,0,2.65,0,3.77.99,3.81,3.65.07,4.79.02,9.58.02,14.37,0,0,.02,0,.03,0,0,4.33,0,8.66,0,12.99Z"/></svg>
                    <span>OQVA.digital</span>
                    <span>6-8 Bonhill St</span>
                    <span>EC2A 4BX</span>
                    <span>hi@oqva.digital</span>
                </div>
                </p>
                <div class="flex columns gap">
                    <p>
                        Invoice No
                        <input type="number" name="invoice-number" min="1">
                    </p>

                    <p>
                        Date
                        <input type="date" name="invoice-date">
                    </p>
                </div>
            </header>

            <div class="flex columns gap">
                <label class="flex rows">To: <input id="mainInputName" type="text" name="client-name" placeholder="Client Name"></label>
    
                <div class="flex rows wrap gap">
                    <input type="text" name="address" placeholder="Address">
                    <input type="text" name="city" placeholder="City">
                    <input type="text" name="postcode" placeholder="Postcode">
                </div>
            </div>

            <label class="flex columns">Description of the service: <textarea name="description-of-service" placeholder="Insert description of services"></textarea></label>

            <label class="flex rows">Date of Service: <input type="text" name="service-date(s)" placeholder="Insert date(s) of service"></label>

            <label class="flex rows">Amount: <input type="text" name="amount" placeholder="Insert amount"></label>

            <label class="flex columns">Payment Terms: <textarea name="payment-terms" placeholder="Insert payment terms"></textarea></label>

            <p class="payment_info">
                Please make payment to the following account:<br><br>
                <span>
                    OQVA LTD
                    <br>Sort Code: 608371
                    <br>Account Number: 73167441
                </span>
                <br><br><u>Thank you for your business!</u>
                <br>Andrei Croitor
            </p>

            <div class="bt_ctnr">
                <button id="print_bt" >Print or save as PDF</button>
                <button id="save_bt">Save as HTML</button>
            </div>
        </article>

        <picture class="graphic g1">
            <source srcset="https://oqva.digital/home/graphic01.webp" type="image/webp">
            <source srcset="https://oqva.digital/home/graphic01.png" type="image/png">
            <img src="https://oqva.digital/home/graphic01.png" alt="Graphism" draggable="false">
        </picture>
    </main>

    <div class="stored_data">
        <h2>Pre Stored Data</h2>
        <div class="ctnr"></div>
    </div>
</body>












    <script>

        const date = new Date().toLocaleDateString('en-GB').replaceAll('/', '_')

        let mainInputName = document.getElementById('mainInputName').value

        let baseFileNameModel = `Invoice-${mainInputName}-${date}`

        const inputs = document.querySelectorAll('input, textarea');

        let storedDataCtnr = document.querySelector('.stored_data .ctnr')
        let storedFields = document.querySelectorAll('.stored_data .ctnr span')

        for (let i = 0; i < inputs.length; i++) {
            
            // create span
            const newSpanElement = document.createElement('span');
            storedDataCtnr.appendChild(newSpanElement);

            storedFields = document.querySelectorAll('.stored_data .ctnr span')

            const inputElement = inputs[i];
            inputElement.addEventListener('input', function() {

                mainInputName = document.getElementById('mainInputName').value

                baseFileNameModel = `Invoice-${mainInputName}-${date}`

                document.title = baseFileNameModel

                const inputValue = this.value;

                const spanElement = document.querySelectorAll('.stored_data .ctnr span')[i];

                if(this.getAttribute('name') != null) {
                    spanElement.innerHTML = `<b>${this.getAttribute('name')}</b>  ${inputValue};`
                } else {
                    spanElement.innerHTML = inputValue;
                }

                docContent = document.querySelector("html").innerHTML
                
            });
        }

        setTimeout(() => {
            storedFields = document.querySelectorAll('.stored_data .ctnr span')

            if(storedFields.length > inputs.length) {
                for(i=0;i<storedFields.length;i++) {
                    if(storedFields[i].innerHTML == "") {
                        storedFields[i].remove()
                    }
                }
            }
        }, 50);

        storedFields = document.querySelectorAll('span')
        let docContent = document.querySelector("html").innerHTML

        function download(filename, text) {
            var element = document.createElement('a');
            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + 
            encodeURIComponent(text));
            element.setAttribute('download', filename);

            element.style.display = 'none';
            document.body.appendChild(element);

            element.click();

            document.body.removeChild(element);
        }
        
        const printBt = document.getElementById('print_bt')
        const saveBt = document.getElementById('save_bt')

        printBt.addEventListener('click', function() {
            window.print()
        })

        saveBt.addEventListener('click', function() {
            download(`${baseFileNameModel}.html`, docContent)
        })
    </script>
</html>