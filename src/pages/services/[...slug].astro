---
import { type CollectionEntry, getCollection } from "astro:content";
import SubpageLayout from "../../layouts/BaseLayout.astro";
import ContactSection from "../../components/ContactSection.astro"
import BlogStripe from "../../components/BlogStripe.astro";

import BackBt from "../../components/BackBt.astro";

export async function getStaticPaths() {
    const services = await getCollection("services");
    return services.map((service) => ({
        params: { slug: service.slug },
        props: service,
    }));
}
type Props = CollectionEntry<"services">;

const service = Astro.props;
const { Content } = await service.render();

import "../../styles/content.css"
import "../../styles/subpages.css"
import "../../styles/posts.css"

import { Schema } from "astro-seo-schema"
import PricingCTA from "../../components/PricingCTA.astro";

const services = (await getCollection('services')).sort((a, b) => {
    // Check if both items have an 'order' property
    if (a.data.order !== undefined && b.data.order !== undefined) {
        return a.data.order - b.data.order; // Sort by 'order' if both have it
    } else if (a.data.order !== undefined) {
        return -1; // 'a' has 'order', but 'b' doesn't, so 'a' comes first
    } else if (b.data.order !== undefined) {
        return 1; // 'b' has 'order', but 'a' doesn't, so 'b' comes first
    } else {
        // Both 'a' and 'b' don't have 'order', fallback to sorting by 'title'
        return a.data.title.localeCompare(b.data.title);
    }
});


let serviceTitle = service.data.title;

let filteredServices = services.filter(p => p.data.title !== serviceTitle);

let firstRandomPos = 0
let secondRandomPos = 0
let thirdRandomPos = 0

while (filteredServices[firstRandomPos].data.title == serviceTitle || filteredServices[secondRandomPos].data.title == serviceTitle || filteredServices[thirdRandomPos].data.title == serviceTitle || (firstRandomPos == secondRandomPos || thirdRandomPos == secondRandomPos || thirdRandomPos == firstRandomPos)) {
    firstRandomPos = Math.floor(Math.random() * filteredServices.length)
    secondRandomPos = Math.floor(Math.random() * filteredServices.length)
    thirdRandomPos = Math.floor(Math.random() * filteredServices.length)
}

---

<SubpageLayout {...service.data}>
    <section class="intro">
        <BackBt url={`/services/#${(service.data.title).toLowerCase().replace(/\s+/g, '-')}`} label="Other services"/>

        <div class="cover squares_bg">
			<img src={service.data.image} alt={service.data.description} class="reveal_delay" loading="lazy" draggable="false"/>
        </div>

        <!-- <img src={services.data.image} alt={`Photo of ${services.data.title} cleaning service`}> -->

        <!-- <hr> -->
    
    </section>

    <div class="content_ctnr">
        <article class="reveal">
            <h1>{service.data.title} {String(service.data.title).includes('Cleaning') ? "" : "Cleaning"}</h1>

            <div class="post_content">
                <Content />

                {service.data.minWeeklyHours && service.data.hourlyPrice ? (
                    <PricingCTA
                        intro={service.data.pricingParagraphIntro}
                        job={service.data.title}
                        minimumHours={service.data.minWeeklyHours}
                        price={service.data.hourlyPrice}/>
                ) : null}
            </div>

            <div class="cta_ctnr">
                <a href="/contact/" class="main cta" aria-label="Get a free quote for our cleaning services">Get a free quote</a>
            </div>
        </article>

        <hr>
    
        <aside class="recommendations reveal">
            <span class="tangent_content_heading">Other Services</span>

            <ul class="posts">
                <li id={(filteredServices[firstRandomPos].data.title).toLowerCase().replace(/\s+/g, '-')} class="scroll_margin_top squares_bg reveal_delay2">
                    <div class="ctnr">
                        <div class="content">
                            <div class="ctnr">
                                <a href={`/services/${filteredServices[firstRandomPos].slug}/`}>
                                    <p class="title">{filteredServices[firstRandomPos].data.title}</p>
                                </a>
	
                                {filteredServices[firstRandomPos].data.description ? (
                                    <p class="description">{filteredServices[firstRandomPos].data.description}</p>
                                ) : null}

                                <a href={`/services/${filteredServices[firstRandomPos].slug}/`} class="read_more">Read more</a>
                            </div>
                        </div>

                        <a class="hero" href={`/services/${filteredServices[firstRandomPos].slug}/`}>
                            <img src={filteredServices[firstRandomPos].data.image} alt={filteredServices[firstRandomPos].data.description} loading="lazy" draggable="false"/>
                        </a>
                    </div>
                </li>

                <li id={(filteredServices[secondRandomPos].data.title).toLowerCase().replace(/\s+/g, '-')} class="scroll_margin_top squares_bg reveal_delay2">
                    <div class="ctnr">
                        <div class="content">
                            <div class="ctnr">
                                <a href={`/services/${filteredServices[secondRandomPos].slug}/`}>
                                    <p class="title">{filteredServices[secondRandomPos].data.title}</p>
                                </a>
	
                                {filteredServices[secondRandomPos].data.description ? (
                                    <p class="description">{filteredServices[secondRandomPos].data.description}</p>
                                ) : null}

                                <a href={`/services/${filteredServices[secondRandomPos].slug}/`} class="read_more">Read more</a>
                            </div>
                        </div>

                        <a class="hero" href={`/services/${filteredServices[secondRandomPos].slug}/`}>
                            <img src={filteredServices[secondRandomPos].data.image} alt={filteredServices[secondRandomPos].data.description} loading="lazy" draggable="false"/>
                        </a>
                    </div>
                </li>

                <li id={(filteredServices[thirdRandomPos].data.title).toLowerCase().replace(/\s+/g, '-')} class="scroll_margin_top squares_bg reveal_delay2">
                    <div class="ctnr">
                        <div class="content">
                            <div class="ctnr">
                                <a href={`/services/${filteredServices[thirdRandomPos].slug}/`}>
                                    <p class="title">{filteredServices[thirdRandomPos].data.title}</p>
                                </a>
	
                                {filteredServices[thirdRandomPos].data.description ? (
                                    <p class="description">{filteredServices[thirdRandomPos].data.description}</p>
                                ) : null}

                                <a href={`/services/${filteredServices[thirdRandomPos].slug}/`} class="read_more">Read more</a>
                            </div>
                        </div>

                        <a class="hero" href={`/services/${filteredServices[thirdRandomPos].slug}/`}>
                            <img src={filteredServices[thirdRandomPos].data.image} alt={filteredServices[thirdRandomPos].data.description} loading="lazy" draggable="false"/>
                        </a>
                    </div>
                </li>
            </ul>
        </aside>
    
        <a href="/services/" class="back">All Services</a>
    </div>

    <ContactSection />

    <BlogStripe/>

    <Schema
        item={{
            "@context": "https://schema.org",
            "@type": "Service",
            "headline": `${service.data.title} ${String(service.data.title).includes('Cleaning') ? " Service" : "Cleaning Service"}`,
            "image": `${service.data.image}`,
            "author": [{
                "@type": "Organization",
                "name": "The Clean Network"
            }],
            "publisher": {
                "@type": "Organization",
                "name": "The Clean Network",
                "logo": {
                    "@type": "ImageObject",
                    "url": "/logo/tcn-logo-360.png"
                }
            },
            "areaServed": {
                "@type": "City",
                "name": "London",
                "sameAs": "https://en.wikipedia.org/wiki/London"
            },
        }}
    />
</SubpageLayout>