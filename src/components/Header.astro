---
import { getCollection } from "astro:content";
const services = await getCollection("services");
// const sectors = await getCollection("sectors");

import { TEL, TEL_HREF } from "../consts";
---

<div class="stripe">
    <a href="/contact/" class="announcement">Contact us today for a <span>free quote</span></a>

    <div class="ctnr">
        <a href={`tel:${TEL_HREF}`} class="tel">
            <span class="icon"></span>London: {TEL}
        </a>
        <!-- <a href="tel:+44-0121-3927529">Birmingham: 0121 3927529</a> -->
    </div>
</div>

<header>
    <div class="ctnr">
        <a href="/" class="logo_anchor">
            <picture>
                <!-- <source media="(min-width:650px)" srcset="/tcn-logo-360.png"> -->
                <source media="(min-width:850px)" srcset="/logo/tcn-logo-720.webp">
                <source media="(min-width:300px)" srcset="/logo/tcn-logo-360.webp">
                <img src="/logo/tcn-logo-360.png" alt="The Clean Network logo" width="125" height="66">
            </picture>
        </a>

        <nav>
            <div class="ctnr">
                <a href="/">Home</a>

                <div class="subnav">
                    <div class="flex expand">
                        <a href="/services/">Services</a>

                        <button
                            class="icon"
                            type="button"
                            aria-label="Expand navigation"
                        >
                            <span></span>
                        </button>
                    </div>

                    <div class="subsets">
                        <div>
                            <a href="/services/#indoor" class="heading indoor icon">Indoor Cleaning</a>

                            <hr/>

                            {
                                services.map((services) => (
                                    <>
                                        {services.data.type === "indoor" ? (
                                            <a
                                                href={`/services/${services.slug}/`}
                                            >
                                                {services.data.title}
                                            </a>
                                        ) : null}
                                    </>
                                ))
                            }
                        </div>

                        <hr />

                        <div>
                            <a href="/services/#external" class="heading outdoor icon"
                                >External Cleaning</a
                            >

                            <hr />

                            {
                                services.map((services) => (
                                    <>
                                        {services.data.type === "external" ? (
                                            <a
                                                href={`/services/${services.slug}/`}
                                            >
                                                {services.data.title}
                                            </a>
                                        ) : null}
                                    </>
                                ))
                            }
                        </div>
                    </div>
                </div>

                <a href="/sectors/">Sectors</a>

                <!-- <div class="subnav">
                    <div class="flex expand">
                        <a href="/blog/">Blog</a>

                        <button
                            class="icon"
                            type="button"
                            aria-label="Expand navigation"
                        >
                            <span></span>
                        </button>
                    </div>

                    <div class="subsets">
                        <div>
                            <a href={`/blog/cleaning/`}>
                                Cleaning
                            </a>
                            
                            <hr>

                            <a href={`/blog/health-and-environment/`}>
                                Health & Environment
                            </a>
                            
                            <hr>
                            
                            <a href={`/blog/efficiency/`}>
                                Efficiency
                            </a>
                        </div>
                    </div>
                </div> -->

                <a href="/blog/">Blog</a>

                <a href="/locations/">Locations</a>
                
                <a href="/about/">About</a>
                
                <a href="/team/">Our Team</a>

                <a href="/contact/">Contact</a>

                <a href="/contact/" class="main cta">Get a Free Quote</a>
            </div>
        </nav>

        <button class="hambt" type="button" aria-label="Open navigation menu">
            <div class="ctnr">
                <span></span>
                <span></span>
                <span></span>
            </div>
        </button>
    </div>
    
    <div class="shine_ctnr">
        <div></div>
    </div>
</header>

<style>
    .stripe {
        background-color: var(--primary-a);
        text-align: center;
        color: var(--light);
        text-transform: uppercase;
        letter-spacing: 0.15rem;
        font-size: 1.15rem;
        position: relative;
        z-index: 1;
    }

    .stripe .announcement {
        position: absolute;
        left: 0;
        height: 100%;
        padding: 0 clamp(2rem,calc(8vw - 7rem),4rem) 0 var(--base-width-overflow);
        display: none;
        background-color: var(--dark);
        align-items: center;
        text-align: center;
        justify-content: center;
        color: var(--light);
        font-weight: 300;
        border-right: 0.7rem solid var(--highlight);
    }

    .stripe .announcement:hover {
        background-color: var(--dark-a);
    }

    .stripe .announcement span {
        color: var(--highlight-a);
        font-weight: 500;
        margin-left: 0.5rem;
    }

    .stripe > .ctnr {
        height: 2.5rem;
        width: var(--base-width);
        margin-inline: auto;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: clamp(0rem,calc(9vw - 7rem),3rem);
    }

    .stripe .tel {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.8rem;
    }

    .stripe .tel .icon {
        width: 1rem;
        height: 1rem;
        background-image: url(/icons/tel.svg);
    }

    header {
        background-color: rgb(46 163 242 / 95%);
        backdrop-filter: blur(0.3rem);
        position: sticky;
        top: 0;
        left: 0;
        right: 0;
        height: var(--header-height);
        z-index: 4;
        background-image: linear-gradient(0deg, var(--primary-b) 0%, transparent 38% );
        border-bottom: 0.2rem solid var(--primary);
        /* padding-top: 0.2rem; */
    }

    .shine_ctnr {
        position: absolute;
        inset:0;
        overflow: hidden;
        pointer-events: none;
    }

    .shine_ctnr div {
        background-image: linear-gradient(70deg,transparent 20%, #fff5,transparent 80%);
        width: 100%;
        height: 100%;
        transform: translateX(-100%);
        animation: shine 0.6s 0.8s linear 1;
    }

    @keyframes shine {
        0% {
            transform: translateX(-100%);
        } 100% {
            transform: translateX(100%);
        }
    }

    header > .ctnr {
        width: var(--base-width);
        margin-inline: auto;
        display: flex;
        height: 100%;
        justify-content: space-between;
        align-items: center;
    }

    header .logo_anchor {
        width: clamp(1rem,33vmin,15rem);
        display: flex;
        height: 100%;
        align-items: center;
    }

    .logo_anchor > picture, .logo_anchor img {
        display: flex;
    }

    .hambt {
        width: var(--header-height);
        height:var(--header-height);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 3;
        margin-right: calc((var(--header-height) - clamp(2.5rem,9vw,4rem)) / -2);
    }

    .hambt > .ctnr {
        width: clamp(2.5rem,10vw,4rem);
        height: clamp(2rem,8vw,3.5rem);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: stretch;
    }

    .hambt span {
        height: 17%;
        background-color: var(--light);
        border-radius: 0.2rem;
        transition: opacity 0.2s ease, transform 0.2s ease;
    }

    .hambt.close {
    }

    .hambt.close span:nth-child(1) {
        transform: translateY(250%) rotate(45deg);
    }

    .hambt.close span:nth-child(2) {
        transform: rotate(-45deg);
    }

    .hambt.close span:nth-child(3) {
        opacity: 0;
        transform: translateY(-220%);
    }

    header nav {
    width: calc(100% - (100% - var(--base-width)) / 2);
    background-color: var(--light-d);
    font-size: clamp(1.6rem,5vw,2.2rem);
    border-radius: 0 0 0 1.4rem;
    padding: 2rem 2rem 2rem 0;
    color: var(--primary-a);
    box-sizing: border-box;
    position: absolute;
    overflow-y: scroll;
    font-weight: 600;
    max-height: 68vh;
    right: 0;
    top: calc(var(--header-height) + 0.2rem);
    border-left: 0.2rem solid #d3e1ff;
    border-bottom: 0.2rem solid #d3e1ff;
    transform: scale(0.95);
    transform-origin: top right;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease,visibility 0.3s ease,transform 0.5s ease;
    background-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg id='Camada_1' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 25.5 25.5'%3E%3Cdefs%3E%3Cstyle%3E.cls-1%7Bfill:none;stroke:%23fff;stroke-miterlimit:10;%7D%3C/style%3E%3C/defs%3E%3Cpolyline class='cls-1' points='25 0 25 25 0 25'/%3E%3C/svg%3E");
    background-size: clamp(1.2rem,2vw,2rem);
    }

    header nav.show {
        opacity: 1;
        visibility: visible;
        transform: scale(1);
    }

    header nav .cta {
        padding: clamp(0.8rem,3vmin,1.2rem) clamp(0.9rem, 3vmin, 1.5rem);
        border-radius: 0.4rem;
        height: min-content;
        position: sticky;
        bottom: 0;
        margin: 6rem 0 2rem;
        transition: filter 0.5s ease;
    }

    header nav .cta:hover {
        filter: brightness(1.1);
        transition: filter 0.1s ease;
    }

    header nav > .ctnr {
        display: flex;
        flex-direction: column;
        justify-content: right;
        align-items: end;
        margin-inline: auto;
        text-align: right;
    }

    header nav a {
        padding: 0 0.6rem;
        display: flex;
        align-items: center;
    }

    header nav > .ctnr > a:not(.cta),
    .subnav > .flex > a:not(.cta) {
        border-radius: 0.3rem;
        height: 4.3rem;
    }

    .subsets {
        padding: 1.5rem 0 0 3rem;
        font-size: 0.9em;
        font-weight: 500;
        display: none;
        flex-direction: column;
        gap: clamp(2rem,2vw,4rem);
        margin: 0rem 0 3rem;
        border-radius: 0.9rem;
        /* border: 0.1rem solid var(--light); */
        align-items: end;
    }

    .subsets > div {
        display: flex;
        flex-direction: column;
        align-items: end;
        width: max-content;
    }

    .subsets > div a {
        padding: 0.7rem 0.5rem;
        /* white-space: nowrap; */
        display: block;
        width: 100%;
        max-width: 75vw;
    }

    header nav .subnav {
        display: flex;
        flex-direction: column;
        align-items: end;
        position: relative;
        height: 100%;
        justify-content: center;
    }

    .subsets > hr {
        margin: 0;
        background-color: var(--light);
        flex: 1;
        border-bottom: 0.1rem solid var(--light);
        width: 100%;
    }

    .subsets.visible {
        display: flex;
    }

    .subsets .heading {
        font-weight: 600;
        position: relative;
        width: fit-content;
    }

    .subsets .heading.icon::after {
        content: "";
        position: relative;
        width: 1.3rem;
        height: 1.3rem;
        background-size: contain;
        background-position: center;
        background-repeat: no-repeat;
        display: inline-block;
        margin-left: 0.6rem;
        opacity: 0.5;
    }

    .subsets .icon.indoor::after {
        background-image: url("/icons/indoor.svg");
    }

    .subsets .icon.outdoor::after {
        background-image: url("/icons/outdoor.svg");
    }

    .subsets .icon.sectors::after {
        background-image: url("/icons/sectors.svg");
    }

    .subsets .icon.about::after {
        background-image: url("/icons/question.svg");
    }

    .subsets .icon.rates::after {
        background-image: url("/icons/star.svg");
    }

    .subnav > .flex {
        align-items: center;
    }

    .subnav .expand button {
        color: var(--light);
        padding-right: 0.6rem;
        line-height: 1;
        width: 3rem;
        height: 3.6rem;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-right: -0.6rem;
    }

    .subnav .expand button span {
        display: block;
        border-bottom: 0.5rem solid var(--highlight);
        border-right: 0.5rem solid var(--highlight);
        border-top: 0.5rem solid transparent;
        border-left: 0.5rem solid transparent;
        transform: translate(50%, 0%) rotate(135deg);
    }

    .subnav .expand button span.active {
        transform: translate(0%, -50%) rotate(45deg);
    }

    .subsets > div hr {
        width: 2rem;
        margin: 1rem;
        height: 0.1rem;
        background-color: var(--primary-c);
    }






    @media screen and (min-width:600px) {
        .stripe .announcement {
            display: flex;
        }

        .stripe > .ctnr {
            justify-content: right;
        }
    }





    @media screen and (min-width: 1200px) {
        .subnav .expand button,
        .hambt {
            display: none;
        }

        .shine_ctnr div {
            background-image: linear-gradient(50deg,transparent 20%,#fff4,transparent 80%);
            animation: shine 0.6s 0.8s linear 1;
        }

        header nav {
            position: relative;
            top: unset;
            transform: unset;
            overflow: unset;
            background-color: transparent;
            color: var(--light);
            font-weight: 400;
            flex: 1;
            padding: 0;
            height: 100%;
            opacity: 1;
            visibility: visible;
            backdrop-filter: unset;
            font-size: clamp(1.5rem, 3.8vmin, 1.9rem);
            box-shadow: unset;
            background-image: unset;
            border: unset;
        }

        header nav.show {
            opacity: unset;
            visibility: unset;
            transform: unset;
        }

        header nav a {
            display: flex;
            align-items: center;
            box-sizing: border-box;
            height: unset;
        }

        header nav .cta {
            position: static;
            margin: unset;
            margin-left: clamp(0rem, calc(8vw - 9rem), 6rem);
            font-size: clamp(1.5rem, 3.8vmin, 1.8rem);
        }

        header nav > .ctnr {
            flex-direction: row;
            text-align: unset;
            justify-content: right;
            width: unset;
            gap: clamp(0rem,calc(7vw - 8.5rem),2.6rem);
            align-items: center;
            height: 100%;
        }

        /* Main header anchors */

        header nav > .ctnr > a:not(.cta),
        .subnav > .flex > a:not(.cta) {
            transition: background-color 0.3s ease;
            padding: 0.8rem clamp(0.6rem, 0.8vw, 1.6rem);
            text-shadow: 0 0.1rem 0rem rgb(47 54 60 / 30%);
        }

        header nav > .ctnr > a:not(.cta):hover,
        .subnav:hover > .flex > a:not(.cta) {
            transition: background-color 0.1s ease;
            background-color: #4DB1FF;
        }

        header nav .subnav {
            align-items: center;
        }

        .subnav:hover .subsets {
            transition: opacity 0.2s ease, visibility 0.2s ease,transform 0.2s ease;
            opacity: 1;
            visibility: visible;
            z-index: 2;
            transform: translate(0%, calc(100% - 1rem));
        }

        .subsets {
            background-color: var(--light);
            padding: 3rem 4rem;
            border-radius: 0.8rem;
            position: absolute;
            color: var(--primary-a);
            flex-direction: row;
            bottom: 0;
            margin: 0;
            transform: translate(0%, calc(100% - 2rem));
            box-shadow: 0 1rem 3rem -1rem rgb(248 248 255 / 40%);
            display: flex;
            transition: opacity 0.2s 0.1s ease, visibility 0.2s 0.1s ease, transform 0.2s 0.1s ease;
            opacity: 0;
            visibility: hidden;
            border: 0.1rem solid var(--light-a);
            align-items: stretch;
            font-size: 0.85em;
        }

        .subsets > hr {
            border-bottom: unset;
            border-right: 0.2rem solid var(--light-a);
        }

        .subsets::before {
            content: "";
            position: absolute;
            top: -1rem;
            left: 0;
            right: 0;
            margin-inline: auto;
            border-top: 0.7rem solid var(--light);
            border-right: 0.7rem solid var(--light);
            border-bottom: 0.7rem solid transparent;
            border-left: 0.7rem solid transparent;
            width: 0;
            height: 0;
            transform: translateY(0.5rem) rotate(-45deg);
        }

        .subsets > div a {
            transition: background-color 0.3s ease;
            max-width: 36rem;
            line-height: 1.3;
        }

        .subsets > div a:hover {
            background-color: var(--light-d);
            transition: background-color 0.1s ease;
        }

        .subsets > div {
            display: grid;
            grid-auto-flow: column;
            grid-template-rows: repeat(10, auto);
            height: min-content;
            grid-gap: 0 2rem;
            max-width: 100rem;
            overflow: auto;
        }
    }
</style>

<script>
    const menuBt = document.querySelector(".hambt");
    const nav = document.querySelector("header nav");
    const navBts = document.querySelectorAll("header nav a");

    let showingMenu = false;

    function toggleNav() {
        if (showingMenu == false) {
            nav.classList.add("show");
            menuBt.classList.add("close");

            showingMenu = true;
        } else {
            nav.classList.remove("show");
            menuBt.classList.remove("close");

            showingMenu = false;
        }
    }

    menuBt.addEventListener("click", toggleNav);

    for (let i = 0; i < navBts.length; i++) {
        navBts[i].addEventListener("click", toggleNav);
    }

    window.addEventListener("scroll", function (e) {
        if (showingMenu == true) {
            toggleNav();
        }
    });

    const expandBts = document.querySelectorAll("header nav .expand");

    for (let i = 0; i < expandBts.length; i++) {
        expandBts[i].addEventListener("click", (e) => {
            const target = e.currentTarget as HTMLElement;
            target.parentElement
                .querySelector(".subsets")
                .classList.toggle("visible");

            target.querySelector("span").classList.toggle("active");
        });
    }
</script>
